@use '../variables/variables' as variables;

@mixin col($width) {
  width: $width;
  flex-basis: $width;
}

@mixin create-break-point($break-point, $min-or-max) {
  @if ($break-point == 0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $break-point * 1px) {
      @content;
    }
  }
}

@mixin create-col-class($modifier, $grid-cols) {
  @for $i from 1 through $grid_cols {
    $width: calc(100 / ($grid-cols / $i) * 1%);

    &#{$modifier}-#{$i} {
      width: $width;
      flex-basis: $width;
    }

    &#{$modifier}-offset-#{$i} {
      margin-left: $width;
    }

    &#{$modifier}-#{$i}-hidden {
      display: none !important;
    }
  }
}

@mixin create-col-classes($modifier, $grid-cols, $break-point) {
  $min-or-max: 'min';

  //@if ($modifier == '-lg') {
  //  $min-or-max: 'max'
  //}

  @if ($modifier == '') {
    @include create-col-class($modifier, $grid-cols);
  } @else {
    @include create-break-point($break-point, $min-or-max) {
      @include create-col-class($modifier, $grid-cols);
    }
  }
}

@mixin add-table-styles {
  .table {
    width: 100%;
    margin-top: 1rem;
  }

  th,
  td {
    padding: 1rem;
  }

  td,
  th {
    white-space: nowrap;
    border-color: transparent;
    border-right-color: var(--tui-base-04);

    &:last-child {
      border-right-color: transparent;
    }
  }

  tbody {
    border-color: transparent;
  }

  tr:nth-child(even) td {
    background: var(--tui-base-02);
  }

  .filters {
    display: flex;
  }

  .input {
    flex: 1;
  }

  //.columns {
  //  width: 10.625rem;
  //}

  .match {
    background: var(--tui-selection);
  }
}

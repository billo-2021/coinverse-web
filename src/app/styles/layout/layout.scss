@use '../mixin/mixin' as mixin;
@use '../variables/variables' as variables;

.page {
  // min-height: 100vh;
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.full-width {
  width: 100%;
}

.container {
  max-width: variables.$card_width_md * 1px;
  margin: 0 auto;

  &-fluid {
    margin: 0;
    max-width: 100%;
  }
}

.row {
  width: 100%;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}


.flex-center {
  justify-content: center;
  align-items: center;
  text-align: center;
}

.col {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  @each $modifier, $break-point in variables.$map_grid_props {
    @include mixin.create-col-classes($modifier, variables.$grid_cols, $break-point);
  }
}

.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

@each $index, $value in variables.$sizes {
  .p-#{$index} {
    padding: $value;
  }

  .pl-#{$index} {
    padding-left: $value;
  }

  .pr-#{$index} {
    padding-right: $value;
  }

  .pt-#{$index} {
    padding-top: $value;
  }

  .pb-#{$index} {
    padding-bottom: $value;
  }

  .m-#{$index} {
    margin: $value;
  }

  .ml-#{ $index} {
    margin-left: $value;
  }

  .mr-#{$index} {
    margin-right: $value;
  }

  .mt-#{$index} {
    margin-top: $value;
  }

  .mb-#{$index} {
    margin-bottom: $value;
  }
}


.text-center {
  text-align: center;
}
